# This file is generated - DO NOT EDIT!
# To override config, edit docker-compose.override.yml
version: "2.1"
services:
    dataexchange_0:
        container_name: dev_dataexchange_0
        image: ghcr.io/hyperledger/firefly-dataexchange-https@sha256:9b191cf693a5b4a3b0bff48aac36fa76cf040d94033607a240cbd83e4fd2942c
        volumes:
            - dataexchange_0:/data
        ports:
            - 10205:3000
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    dataexchange_1:
        container_name: dev_dataexchange_1
        image: ghcr.io/hyperledger/firefly-dataexchange-https@sha256:9b191cf693a5b4a3b0bff48aac36fa76cf040d94033607a240cbd83e4fd2942c
        volumes:
            - dataexchange_1:/data
        ports:
            - 10405:3000
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    fabconnect_0:
        container_name: dev_fabconnect_0
        image: ghcr.io/hyperledger/firefly-fabconnect@sha256:4f4798ee34eee0b67886f1baa37f4d50a33e2932c94312f189fe5f015f6564a4
        command: -f /fabconnect/fabconnect.yaml
        volumes:
            - fabconnect_receipts_0:/fabconnect/receipts
            - fabconnect_events_0:/fabconnect/events
            - /home/tejab/.firefly/stacks/dev/runtime/blockchain/fabconnect.yaml:/fabconnect/fabconnect.yaml
            - firefly_fabric:/etc/firefly
            - /home/tejab/.firefly/stacks/dev/runtime/blockchain/ccp.yaml:/fabconnect/ccp.yaml
        ports:
            - 5102:3000
        depends_on:
            fabric_ca:
                condition: service_started
            fabric_orderer:
                condition: service_started
            fabric_peer:
                condition: service_started
        healthcheck:
            test:
                - CMD
                - wget
                - -O
                - '-'
                - http://localhost:3000/status
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    fabconnect_1:
        container_name: dev_fabconnect_1
        image: ghcr.io/hyperledger/firefly-fabconnect@sha256:4f4798ee34eee0b67886f1baa37f4d50a33e2932c94312f189fe5f015f6564a4
        command: -f /fabconnect/fabconnect.yaml
        volumes:
            - fabconnect_receipts_1:/fabconnect/receipts
            - fabconnect_events_1:/fabconnect/events
            - /home/tejab/.firefly/stacks/dev/runtime/blockchain/fabconnect.yaml:/fabconnect/fabconnect.yaml
            - firefly_fabric:/etc/firefly
            - /home/tejab/.firefly/stacks/dev/runtime/blockchain/ccp.yaml:/fabconnect/ccp.yaml
        ports:
            - 5202:3000
        depends_on:
            fabric_ca:
                condition: service_started
            fabric_orderer:
                condition: service_started
            fabric_peer:
                condition: service_started
        healthcheck:
            test:
                - CMD
                - wget
                - -O
                - '-'
                - http://localhost:3000/status
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    fabric_ca:
        container_name: dev_fabric_ca
        image: hyperledger/fabric-ca:1.5
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        environment:
            FABRIC_CA_HOME: /etc/hyperledger/fabric-ca-server
            FABRIC_CA_SERVER_CA_CERTFILE: /etc/firefly/organizations/peerOrganizations/org1.example.com/ca/fabric_ca.org1.example.com-cert.pem
            FABRIC_CA_SERVER_CA_KEYFILE: /etc/firefly/organizations/peerOrganizations/org1.example.com/ca/priv_sk
            FABRIC_CA_SERVER_CA_NAME: fabric_ca
            FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS: 0.0.0.0:17054
            FABRIC_CA_SERVER_PORT: "7054"
        volumes:
            - firefly_fabric:/etc/firefly
        ports:
            - 7054:7054
            - 17054:17054
    fabric_orderer:
        container_name: dev_fabric_orderer
        image: hyperledger/fabric-orderer:2.3
        command: orderer
        environment:
            FABRIC_LOGGING_SPEC: INFO
            ORDERER_ADMIN_LISTENADDRESS: 0.0.0.0:7053
            ORDERER_ADMIN_TLS_CERTIFICATE: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.crt
            ORDERER_ADMIN_TLS_CLIENTROOTCAS: '[/etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/ca.crt]'
            ORDERER_ADMIN_TLS_ENABLED: "true"
            ORDERER_ADMIN_TLS_PRIVATEKEY: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.key
            ORDERER_ADMIN_TLS_ROOTCAS: '[/etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/ca.crt]'
            ORDERER_CHANNELPARTICIPATION_ENABLED: "true"
            ORDERER_GENERAL_BOOTSTRAPMETHOD: none
            ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.crt
            ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.key
            ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/ca.crt]'
            ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
            ORDERER_GENERAL_LISTENPORT: "7050"
            ORDERER_GENERAL_LOCALMSPDIR: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/msp
            ORDERER_GENERAL_LOCALMSPID: OrdererMSP
            ORDERER_GENERAL_TLS_CERTIFICATE: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.crt
            ORDERER_GENERAL_TLS_ENABLED: "true"
            ORDERER_GENERAL_TLS_PRIVATEKEY: /etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/server.key
            ORDERER_GENERAL_TLS_ROOTCAS: '[/etc/firefly/organizations/ordererOrganizations/example.com/orderers/fabric_orderer.example.com/tls/ca.crt]'
            ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR: "1"
            ORDERER_KAFKA_VERBOSE: "true"
            ORDERER_OPERATIONS_LISTENADDRESS: 0.0.0.0:17050
        volumes:
            - firefly_fabric:/etc/firefly
            - fabric_orderer:/var/hyperledger/production/orderer
        ports:
            - 7050:7050
            - 7053:7053
            - 17050:17050
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    fabric_peer:
        container_name: dev_fabric_peer
        image: hyperledger/fabric-peer:2.3
        environment:
            CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:17051
            CORE_PEER_ADDRESS: fabric_peer:7051
            CORE_PEER_CHAINCODEADDRESS: fabric_peer:7052
            CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
            CORE_PEER_GOSSIP_BOOTSTRAP: fabric_peer:7051
            CORE_PEER_GOSSIP_EXTERNALENDPOINT: fabric_peer:7051
            CORE_PEER_ID: fabric_peer
            CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
            CORE_PEER_LOCALMSPID: Org1MSP
            CORE_PEER_MSPCONFIGPATH: /etc/firefly/organizations/peerOrganizations/org1.example.com/peers/fabric_peer.org1.example.com/msp
            CORE_PEER_PROFILE_ENABLED: "false"
            CORE_PEER_TLS_CERT_FILE: /etc/firefly/organizations/peerOrganizations/org1.example.com/peers/fabric_peer.org1.example.com/tls/server.crt
            CORE_PEER_TLS_ENABLED: "true"
            CORE_PEER_TLS_KEY_FILE: /etc/firefly/organizations/peerOrganizations/org1.example.com/peers/fabric_peer.org1.example.com/tls/server.key
            CORE_PEER_TLS_ROOTCERT_FILE: /etc/firefly/organizations/peerOrganizations/org1.example.com/peers/fabric_peer.org1.example.com/tls/ca.crt
            CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE: dev_default
            CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
            FABRIC_LOGGING_SPEC: INFO
        volumes:
            - firefly_fabric:/etc/firefly
            - fabric_peer:/var/hyperledger/production
            - /var/run/docker.sock:/host/var/run/docker.sock
        ports:
            - 7051:7051
            - 17051:17051
    firefly_core_0:
        container_name: dev_firefly_core_0
        image: ghcr.io/hyperledger/firefly@sha256:c5450e4d4cf104f2bd53a7a520ccd316679408d6bf4c69bbb49814bdab89de06
        volumes:
            - /home/tejab/.firefly/stacks/dev/runtime/config/firefly_core_0.yml:/etc/firefly/firefly.core.yml:ro
        ports:
            - 5000:5000
            - 5101:5101
        depends_on:
            dataexchange_0:
                condition: service_started
            fabconnect_0:
                condition: service_healthy
            fabconnect_1:
                condition: service_healthy
            fabric_ca:
                condition: service_started
            fabric_orderer:
                condition: service_started
            fabric_peer:
                condition: service_started
            ipfs_0:
                condition: service_healthy
            tokens_0_0:
                condition: service_healthy
            tokens_1_0:
                condition: service_healthy
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    firefly_core_1:
        container_name: dev_firefly_core_1
        image: ghcr.io/hyperledger/firefly@sha256:c5450e4d4cf104f2bd53a7a520ccd316679408d6bf4c69bbb49814bdab89de06
        volumes:
            - /home/tejab/.firefly/stacks/dev/runtime/config/firefly_core_1.yml:/etc/firefly/firefly.core.yml:ro
        ports:
            - 5001:5001
            - 5201:5201
        depends_on:
            dataexchange_1:
                condition: service_started
            fabconnect_0:
                condition: service_healthy
            fabconnect_1:
                condition: service_healthy
            fabric_ca:
                condition: service_started
            fabric_orderer:
                condition: service_started
            fabric_peer:
                condition: service_started
            ipfs_1:
                condition: service_healthy
            tokens_0_0:
                condition: service_healthy
            tokens_1_0:
                condition: service_healthy
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    ipfs_0:
        container_name: dev_ipfs_0
        image: ipfs/go-ipfs:v0.10.0
        environment:
            IPFS_SWARM_KEY: |-
                /key/swarm/psk/1.0.0/
                /base16/
                3a25922b56b09cd918ac125b363bc00b4303349831a46c81ce284a22db5fb371
            LIBP2P_FORCE_PNET: "1"
        volumes:
            - ipfs_staging_0:/export
            - ipfs_data_0:/data/ipfs
        ports:
            - 10206:5001
            - 10207:8080
        healthcheck:
            test:
                - CMD-SHELL
                - wget --post-data= http://127.0.0.1:5001/api/v0/id -O - -q
            interval: 5s
            timeout: 3s
            retries: 12
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    ipfs_1:
        container_name: dev_ipfs_1
        image: ipfs/go-ipfs:v0.10.0
        environment:
            IPFS_SWARM_KEY: |-
                /key/swarm/psk/1.0.0/
                /base16/
                3a25922b56b09cd918ac125b363bc00b4303349831a46c81ce284a22db5fb371
            LIBP2P_FORCE_PNET: "1"
        volumes:
            - ipfs_staging_1:/export
            - ipfs_data_1:/data/ipfs
        ports:
            - 10406:5001
            - 10407:8080
        healthcheck:
            test:
                - CMD-SHELL
                - wget --post-data= http://127.0.0.1:5001/api/v0/id -O - -q
            interval: 5s
            timeout: 3s
            retries: 12
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    sandbox_0:
        container_name: dev_sandbox_0
        image: ghcr.io/hyperledger/firefly-sandbox:latest
        environment:
            FF_ENDPOINT: http://firefly_core_0:5000
        ports:
            - 5109:3001
    sandbox_1:
        container_name: dev_sandbox_1
        image: ghcr.io/hyperledger/firefly-sandbox:latest
        environment:
            FF_ENDPOINT: http://firefly_core_1:5001
        ports:
            - 5209:3001
    tokens_0_0:
        container_name: dev_tokens_0_0
        image: ghcr.io/hyperledger/firefly-tokens-erc20-erc721@sha256:6b2ce04bfa73c38639a2cdaeec9cb01564c839b4dee5b837d73dfbd56282e19a
        environment:
            AUTO_INIT: "false"
            ETHCONNECT_TOPIC: tokens_0_0
            ETHCONNECT_URL: http://fabconnect_0:3000
        ports:
            - 5108:3000
        depends_on:
            fabconnect_0:
                condition: service_started
        healthcheck:
            test:
                - CMD
                - curl
                - http://localhost:3000/api
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
    tokens_1_0:
        container_name: dev_tokens_1_0
        image: ghcr.io/hyperledger/firefly-tokens-erc20-erc721@sha256:6b2ce04bfa73c38639a2cdaeec9cb01564c839b4dee5b837d73dfbd56282e19a
        environment:
            AUTO_INIT: "false"
            ETHCONNECT_TOPIC: tokens_1_0
            ETHCONNECT_URL: http://fabconnect_1:3000
        ports:
            - 5208:3000
        depends_on:
            fabconnect_1:
                condition: service_started
        healthcheck:
            test:
                - CMD
                - curl
                - http://localhost:3000/api
        logging:
            driver: json-file
            options:
                max-file: "1"
                max-size: 10m
volumes:
    dataexchange_0: {}
    dataexchange_1: {}
    fabconnect_events_0: {}
    fabconnect_events_1: {}
    fabconnect_receipts_0: {}
    fabconnect_receipts_1: {}
    fabric_ca: {}
    fabric_orderer: {}
    fabric_peer: {}
    firefly_fabric: {}
    ipfs_data_0: {}
    ipfs_data_1: {}
    ipfs_staging_0: {}
    ipfs_staging_1: {}
